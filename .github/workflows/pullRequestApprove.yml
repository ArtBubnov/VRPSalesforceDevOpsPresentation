#this scenario will be executed if a Pull Request has been approved !!!!
name: pull request approved logic


env:
  SOURCE_BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
  TARGET_BRANCH_NAME: ${{ github.event.pull_request.base.ref }}
  ENV_DESTRUCTIVE_DIFF_SF: ${{ vars.SF_COMMAND_META_STRING }}
  SALESFORCE_ORG_ALIAS: ${{ vars.SALESFORCE_ORG_ALIAS }}
  ACCESS_KEY_SF: ${{ secrets.ACCESS_KEY_SF }}
  SALESFORCE_META_DIRECTORY: "force-app/main/default"
  APEX_TESTS_DIRECTORY: "force-app/main/default/classes/tests"
  PR_NUMBER: ${{ github.event.number }}



  ACCESS_KEY_SF_DEV: ${{ vars.PLATFORM_USERNAME_GITHUB_VARIABLE_VALUE }}
#depends on the target branch one of the following scenarios will be executed:
on:
  pull_request_review:
    types: [submitted]


jobs:
  push_logic:
    runs-on: ubuntu-latest
    steps:
      - name: Global Step 0. Logger
        run: |
          echo -e "--- Step 1. Output global info for the current pipeline ---\n"
          echo "Event is:"
          echo -e "Pull request\n"
          echo "Pull request source branch is:"
          echo ${{ github.event.pull_request.head.ref }}
          echo -e "\nPull request target branch is:"
          echo ${{ github.event.pull_request.base.ref }}
        
          
      - name: --- System Step 0 ---. Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0


      - name: --- System Step 1 ---. Salesforce CLI install
        uses: sfdx-actions/setup-sfdx@v1


      - name: --- System Step 2 ---. Node install
        uses: actions/setup-node@v4 
        with:
          node-version: 18


      - name: --- Global Step 0. Logger ---
        run: |
          chmod +x ./build/ci_cd_external_functions.sh
          source ./build/ci_cd_external_functions.sh && logger


      - name: --- Global Step 1. Salesforce login ---
        run: |
          chmod +x ./build/ci_cd_external_functions.sh
          source ./build/ci_cd_external_functions.sh && login_to_SF_org


      - name: --- Global Step 2. Get destractive meta list ---
        run: |
          chmod +x ./build/ci_cd_external_functions.sh
          source ./build/ci_cd_external_functions.sh && get_destructive_changes


      - name: --- Global Step 3. Get positive meta list ---
        run: |
          chmod +x ./build/ci_cd_external_functions.sh
          source ./build/ci_cd_external_functions.sh && get_positive_changes


      - name: --- Global Step 4. Get apex tests list ---
        run: |
          chmod +x ./build/ci_cd_external_functions.sh
          source ./build/ci_cd_external_functions.sh && get_apex_tests_list


      - name: --- System Step 5 ---. run JEST tests
        run: |
          npm install --save-dev jest
          npm install @salesforce/sfdx-lwc-jest --save-dev
          npm -version
          node ./node_modules/@salesforce/sfdx-lwc-jest/bin/sfdx-lwc-jest


      - name: --- Global Step 6. Deploy destructive changes without saving ---
        run: |
          chmod +x ./build/ci_cd_external_functions.sh
          source ./build/ci_cd_external_functions.sh && destructive_changes_deploy_actions


      - name: --- Global Step 7. Deploy positive changes without saving ---
        run: |
          chmod +x ./build/ci_cd_external_functions.sh
          source ./build/ci_cd_external_functions.sh && positive_changes_deploy_actions















